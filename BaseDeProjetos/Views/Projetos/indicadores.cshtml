@using BaseDeProjetos.Helpers;
@model List<Projeto>;

<partial name="Header" view-data="@ViewData" />
<div class="container">

    <table class="table">
        <thead class="thead-light">
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Projeto</th>
                <th scope="col">Líder</th>
                <th scope="col">Satisfação do Cliente</th>
                <th scope="col">Valor do Projeto</th>
                <th scope="col">Custo HH</th>
                <th scope="col">Custo HM</th>
                <th scope="col">Média dos Fatores</th>
                <th scope="col">FCF</th>
            </tr>
        </thead>
        <tbody>
            @foreach(Projeto projeto in Model)
            {
                <tr>
                    <td class="cell">@projeto.Id</td>

                    <td class="cell">@projeto.NomeProjeto</td>

                    @if(projeto.Usuario != null)
                    {
                        <td class="cell">@projeto.Usuario.UserName.ToString()</td>
                    }
                    else
                    {
                        <td class="cell">Líder não informado!</td>
                    }

                    <td class="cell">5</td>

                    <td class="cell">@Helpers.FormatarValoresDashboards((decimal)projeto.ValorTotalProjeto) @Helpers.ObterIconeParticipacao(@Helpers.VerificarIntervalo((decimal)projeto.ValorTotalProjeto, (decimal)ViewBag.ValorProjetoMin, (decimal)ViewBag.ValorProjetoMax))</td>

                    @if (projeto.ColaboradoresDoProjeto.Sum(cargo => cargo.Cargo.Salario) != 0 && (decimal)projeto.ValorTotalProjeto != 0)
                    {
                        <td class="cell">R$: @(projeto.ColaboradoresDoProjeto.Sum(cargo => cargo.Cargo.Salario) / (decimal)projeto.ValorTotalProjeto) @Helpers.ObterIconeParticipacao(@Helpers.VerificarIntervalo((decimal)projeto.ColaboradoresDoProjeto.Sum(cargo => cargo.Cargo.Salario), (decimal)ViewBag.CustoHHProjetoMin, (decimal)ViewBag.CustoHHProjetoMax))</td>
                    }
                    else
                    {
                        <td class="cell">R$: 0 @Helpers.ObterIconeParticipacao(@Helpers.VerificarIntervalo((decimal)projeto.ColaboradoresDoProjeto.Sum(cargo => cargo.Cargo.Salario), (decimal)ViewBag.CustoHHProjetoMin, (decimal)ViewBag.CustoHHProjetoMax))</td>
                    }

                    
                    @if (projeto.MaquinasUsadasNoProjeto.Sum(valor => valor.CustoHoraMaquina) != 0 && (decimal)projeto.ValorTotalProjeto != 0)
                    {
                        <td class="cell">R$: @(projeto.MaquinasUsadasNoProjeto.Sum(valor => valor.CustoHoraMaquina) / (decimal)projeto.ValorTotalProjeto) @Helpers.ObterIconeParticipacao(@Helpers.VerificarIntervalo((decimal)projeto.MaquinasUsadasNoProjeto.Sum(valor => valor.CustoHoraMaquina), (decimal)ViewBag.CustoHMProjetoMin, (decimal)ViewBag.CustoHMProjetoMax))</td>
                    }
                    else
                    {
                        <td class="cell">R$: 0 @Helpers.ObterIconeParticipacao(@Helpers.VerificarIntervalo((decimal)projeto.MaquinasUsadasNoProjeto.Sum(valor => valor.CustoHoraMaquina), (decimal)ViewBag.CustoHMProjetoMin, (decimal)ViewBag.CustoHMProjetoMax))</td>
                    }

                    <td class="cell">@Helpers.CalcularMediaFatoresProjeto(projeto) @Helpers.ObterIconeParticipacao(@Helpers.VerificarIntervalo((decimal)@Helpers.CalcularMediaFatoresProjeto(projeto), (decimal)ViewBag.mediaMinFatoresDeProjeto, (decimal)ViewBag.mediaMaxFatoresDeProjeto)) </td>

                    <td class="cell">@Helpers.CalcularValorFCF(projeto.DataInicio, projeto.DataEncerramento, (decimal)projeto.ValorTotalProjeto, ViewBag.despesasDoAno).ToString("0.00")%</td>
                </tr>
            }
            
        </tbody>
    </table>
</div>
<partial name="Footer" />