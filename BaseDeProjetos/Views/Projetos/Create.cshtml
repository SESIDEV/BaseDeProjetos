@model BaseDeProjetos.Models.Projeto
@using Microsoft.AspNetCore.Http;

@{
    ViewData["Title"] = "Criar Projeto";
    @if (!(Context.Session.GetString("_Casa") is null))
    {
        ViewData["Area"] = Context.Session.GetString("_Casa");
    }
}

<partial name="Header" view-data="@ViewData" />
<div style="padding-left: 25em; padding-right: 10em; padding-top: 2em">
    <h1>Criar</h1>
    <h4>Projeto</h4>
    <hr />
    <div>
        <form asp-action="Create" class="row">
            <fieldset class="col-6">
                <legend>Dados básicos do Projeto</legend>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Id" class="control-label"></label>
                    @{
                        var unique_id = $"proj_{DateTime.Now.Ticks}";
                    }
                    <input asp-for="Id" class="form-control" value="@unique_id" readonly />
                    <span asp-validation-for="Id" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Casa" class="control-label"></label>
                    @if (!(Context.Session.GetString("_Casa") is null))
                    {
                        <select asp-for="Casa" class="form-control">
                            @{
                                var enum_v = (int)Enum.Parse(typeof(Instituto), Context.Session.GetString("_Casa"), true);
                            }
                            <option value="@enum_v" selected="selected">@Context.Session.GetString("_Casa")</option>
                        </select>
                    }
                    else
                    {
                        <select asp-for="Casa" class="form-control" asp-items="Html.GetEnumSelectList<Instituto>()"></select>
                    }
                    <span asp-validation-for="Casa" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="NomeProjeto" class="control-label"></label>
                    <input asp-for="NomeProjeto" class="form-control" />
                    <span asp-validation-for="NomeProjeto" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="MembrosEquipe" class="control-label p-2"></label><span data-toggle="modal" data-target="#ModalCenter" class="m-1 border bg-success text-white p-2 rounded" style="cursor:pointer;">Adicionar</span>
                    <input asp-for="MembrosEquipe" class="form-control d-none" />
                    <span asp-validation-for="MembrosEquipe" class="text-danger"></span>
                    <div id="membrosSelecionados" class="form-control" style="padding:2rem;"></div>
                </div>
                <div class="form-group">
                    <label asp-for="AreaPesquisa" class="control-label"></label>
                    <select asp-for="AreaPesquisa" class="form-control" asp-items="Html.GetEnumSelectList<LinhaPesquisa>()"></select>
                    <span asp-validation-for="AreaPesquisa" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Inovacao" class="control-label"></label>
                    <select asp-for="Inovacao" class="form-control" asp-items="Html.GetEnumSelectList<TipoInovacao>()"></select>
                    <span asp-validation-for="Inovacao" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="DataInicio" class="control-label"></label>
                    <input type="date" asp-for="DataInicio" class="form-control" />
                    <span asp-validation-for="DataInicio" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DataEncerramento" class="control-label"></label>
                    <input type="date" asp-for="DataEncerramento" class="form-control" />
                    <span asp-validation-for="DataEncerramento" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DuracaoProjetoEmMeses" class="control-label"></label>
                    <input asp-for="DuracaoProjetoEmMeses" min="0" class="form-control" />
                    <span asp-validation-for="DuracaoProjetoEmMeses" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Status" class="control-label"></label>
                    <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<StatusProjeto>()"></select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            </fieldset>
            <fieldset class="col-6">
                <legend>Dados contábeis do projeto</legend>
                <div class="form-group">
                    <label asp-for="Estado" class="control-label"></label>
                    <select asp-for="Estado" class="form-control" asp-items="Html.GetEnumSelectList<Estado>()"></select>
                    <span asp-validation-for="Estado" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="FonteFomento" class="control-label"></label>
                    <select asp-for="FonteFomento" class="form-control" asp-items="Html.GetEnumSelectList<TipoContratacao>()"></select>
                    <span asp-validation-for="FonteFomento" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ValorTotalProjeto" class="control-label"></label> (R$)
                    <input asp-for="ValorTotalProjeto" class="form-control" placeholder="3,00" />
                    <span asp-validation-for="ValorTotalProjeto" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ValorAporteRecursos" class="control-label"></label> (R$)
                    <input asp-for="ValorAporteRecursos" class="form-control" placeholder="3,00" />
                    <span asp-validation-for="ValorAporteRecursos" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Empresa" class="control-label"></label>
                    <select asp-for="Empresa.Id" class="form-control" asp-items='@(ViewData["Empresas"] as SelectList).OrderBy(p=>p.Text)'>
                        <option>Selecione a empresa</option>
                    </select>

                    <span asp-validation-for="Empresa.Id" class="text-danger"></span>
                </div>

            </fieldset>

            <div class="form-group col-12">
                <input type="submit" value="Criar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-route-casa="@ViewData["Area"]" class="btn btn-primary">Voltar</a>
</div>

<!-- Modal Membros da equipe-->
<div class="modal fade" id="ModalCenter" tabindex="-1" role="dialog" aria-labelledby="ModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalLongTitle">Inserir Membros da Equipe</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="enviarMembrosParaInput()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body d-flex justify-content-between gap-2">
                <div style="width:45%;">
                    <span>Membros do Projeto</span>
                    <div id="membrosDoProjeto" ondrop="drop(event)" ondragover="allowDrop(event)" class="border border-secondary rounded" style="width:100%;min-height:150px;padding:10px;">
                    </div>
                </div>
                <div style="width:45%;">
                    <span>Membros Disponíveis</span>
                    <div id="membrosDisponiveis" ondrop="drop(event)" ondragover="allowDrop(event)" class="border border-secondary rounded" style="width:100%;height:150px;padding:10px;overflow-y:auto;">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="exibirMembrosSelecionados()">Adicionar</button>
            </div>
        </div>
    </div>
</div>

<script>

    let listaUsuarios = [];
    let stringDeUsuariosSelecionados = "";
    var campoDeUsuariosDisponiveis = document.querySelector("#membrosDisponiveis")
    let url = "https://sgi-ggi-isi.azurewebsites.net/"
    let rotaProjetos = "/Projetos/Create"
    let urlCompleta = `${url}${rotaProjetos}`

    async function obterListaDeUsuariosJson() {
        await fetch(urlCompleta)
            .then((response) => {

                return response.json()
            })
            .then((data) => {

                listaUsuarios = data;
                listaUsuarios.forEach(usuario => {
                    var usuariosDisponiveis = document.createElement("p")
                    usuariosDisponiveis.setAttribute("draggable", "true")
                    usuariosDisponiveis.setAttribute("ondragstart", "drag(event)")
                    usuariosDisponiveis.setAttribute("id", `${usuario}`)
                    usuariosDisponiveis.textContent = `${usuario}`
                    usuariosDisponiveis.classList.add("badge", "text-bg-success")
                    usuariosDisponiveis.style.padding = "5px"
                    usuariosDisponiveis.style.margin = "10px"
                    campoDeUsuariosDisponiveis.append(usuariosDisponiveis)
                })
            })

    }
    obterListaDeUsuariosJson()

    function allowDrop(ev) {
        if (ev.target.getAttribute("droppable") == "false") {
            ev.dataTransfer.dropEffect = "none"; // dropping is not allowed
            ev.preventDefault();
        }
        else {
            ev.dataTransfer.dropEffect = "all"; // drop it like it's hot
            ev.preventDefault();
        }
    }

    function drag(ev) {
        ev.dataTransfer.setData("text", ev.target.id);
        ev.target.setAttribute("droppable", "false")
    }

    function drop(ev) {
        ev.preventDefault();
        let data = ev.dataTransfer.getData("text");
        ev.target.appendChild(document.getElementById(data));
    }

    function enviarMembrosParaInput() {
        let membrosSelecionados = document.querySelector("#membrosSelecionados").childNodes
        let input = document.querySelector("#MembrosEquipe")
        let membroSelecionado = "";
        membrosSelecionados.forEach((membro, indice) => {
            if(indice > 0){
                membroSelecionado += `${membro.textContent};`.toString()
                input.value = membroSelecionado
            }
        })
    }

    function exibirMembrosSelecionados() {
        let membrosSelecionados = document.querySelector("#membrosSelecionados")
        let membrosDoProjeto = document.querySelector("#membrosDoProjeto").childNodes
        membrosDoProjeto.forEach((membro, indice) => {
            membrosSelecionados.append(membro)
        })
    }

    
</script>