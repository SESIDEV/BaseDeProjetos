@model BaseDeProjetos.Models.Projeto
@using Microsoft.AspNetCore.Http
@using System.Globalization

@{
    AtribuirDadosViewData(Context, ViewData);
}

<!-- Modal -->
@* @foreach (var cff in Model.CurvaFisicoFinanceira)
{
    @await Component.InvokeAsync("ModalEditCFFProjeto", new { id = cff.Id })
} *@

<div class="modal fade" id="detalhesCFFProjetoModal-@Model.Id" aria-hidden="true"
     aria-labelledby="#detalhesCFFProjetoModal-@Model.Id-Label" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="detalhesCFFProjetoModal-@Model.Id-Label2">
                    Curva Físico Financeira do Projeto @Model.NomeProjeto
                </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (Model.CurvaFisicoFinanceira != null && Model.CurvaFisicoFinanceira.Count > 0)
                {
                    int i = 1;
                    foreach (var cff in @Model.CurvaFisicoFinanceira)
                    {
                        await RenderCFFAccordion(cff, i);
                        i++;
                    }
                }
                else
                {
                    <h5>Não há CFFs para este projeto. Cadastre ao menos uma!</h5>
                }
                @if (Model.CurvaFisicoFinanceira != null & Model.CurvaFisicoFinanceira.Count > 0)
                {
                    <partial name="GraficoCurvaFisicoFinanceira" model="@Model" />
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn app-btn-primary" data-bs-toggle="modal" role="button">
                    Fechar
                </button>
            </div>
        </div>
    </div>
</div>

@{
    void AtribuirDadosViewData(HttpContext context, ViewDataDictionary viewData)
    {
        viewData["Title"] = "Edit";
        if (!(context.Session.GetString("_Casa") is null))
        {
            viewData["Area"] = context.Session.GetString("_Casa");
        }
    }

    async Task RenderCFFAccordion(CurvaFisicoFinanceira cff, int index)
    {
        <div class="accordion" id="accordionCFFsProjeto-@cff.Id">
            <div class="accordion-item">
                <h2 class="accordion-header" id="heading@(cff.Id)">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                            data-bs-target="#collapse@(cff.Id)" aria-expanded="true" aria-controls="collapse@(cff.Id)">
                        Curva Físico Financeira @index
                    </button>
                </h2>
                <div id="collapse@(cff.Id)" class="accordion-collapse collapse" data-bs-parent="#accordionCFFsProjeto-@cff.Id">
                    <div class="accordion-body">
                        <div class="form-group">
                            <label class="control-label">ID da Curva Físico Financeira</label>
                            <input readonly asp-for="@cff.Id" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label class="control-label" asp-for="@cff.PercentualFisico">Percentual Físico</label>
                            <input readonly asp-for="@cff.PercentualFisico" value="@(cff.PercentualFisico.ToString("N"))%"
                                   class="form-control" />
                        </div>
                        <div class="form-group">
                            <label class="control-label" asp-for="@cff.PercentualFinanceiro">Percentual Financeiro</label>
                            <input readonly asp-for="@cff.PercentualFinanceiro"
                                   value="@(cff.PercentualFinanceiro.ToString("N"))%" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label class="control-label">Taxa Físico Financeiro</label>
                            <input readonly class="form-control"
                                   value="@((cff.PercentualFisico / cff.PercentualFinanceiro * 100).ToString("N"))%" />
                        </div>
                        <div class="form-group">
                            <label class="control-label" asp-for="@cff.Data">Data</label>
                            <input type="text" readonly asp-for="@cff.Data" value='@(cff.Data.ToString("dd/MM/yyyy"))'
                                   class="form-control" />
                        </div>
                        <hr>
                        <h4>Deseja deletar ou editar essa Curva Fisico Financeira?</h4>
                        <div class="d-flex justify-content-between gap-2">
                            <button type="button" data-bs-target="#editarCFFProjetoModal-@cff.Id" id="button-@cff.Id"
                                    data-bs-toggle="modal" class="btn app-btn-primary"
                                    onmouseover="carregarModalCFF(event, '@cff.Id')">
                                Editar
                            </button>
                            <form asp-action="Delete" asp-controller="Projetos" asp-route-id="@cff.Id" method="POST">
                                <input readonly type="hidden" asp-for="@cff.Id" class="form-control" />
                                <button type="submit" class="btn btn-danger text-white" data-bs-toggle="modal" role="button">
                                    Deletar
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <hr />
    }
}