@using System.Globalization;
@using BaseDeProjetos.Models;
@using BaseDeProjetos.Helpers;
@model IEnumerable<ParticipacaoTotalViewModel>

@{
    ViewData["Title"] = "Participação";
    var cultura = new CultureInfo("pt-BR");

    var mesInicio = ViewData["mesInicio"] as string;
    var anoInicio = ViewData["anoInicio"] as string;
    var mesFim = ViewData["mesFim"] as string;
    var anoFim = ViewData["anoFim"] as string;
}

<style>
    .ribbon {
        width: 60px;
        height: 90px;
        position: absolute;
    }

        .ribbon span {
            position: absolute;
            display: block;
            width: 80px;
            padding: 5px 0;
            box-shadow: 0 5px 10px rgba(0,0,0,.1);
            font: 700 .7em sans-serif;
            text-shadow: 0 1px 1px rgba(0,0,0,.2);
            text-transform: uppercase;
            text-align: center;
        }

    /* top right*/
    .ribbon-top-right {
        top: -1.0em;
        right: -1.5em;
    }

        .ribbon-top-right span {
            left: -25px;
            top: 30px;
            transform: rotate(45deg);
        }

    .ribbon-red span {
        color: white;
        background-color: #aa0000;
    }

    .ribbon-blue span {
        color: white;
        background-color: #0088ff;
    }

    .ribbon-yellow span {
        color: black;
        background-color: #FFC90E;
    }

    .ribbon-green span {
        color: white;
        background-color: #22B14C;
    }

    .ribbon-green-yellow span {
        color: gold;
        background-color: #22B14C;
    }

    .ribbon-orange span {
        color: white;
        background-color: orangered;
    }
</style>

<script>
    function zerarInputMes(event) {
        let input = event.target;
        let mesSelecionado = input.value;

        let valorMinimo = 1;

        if (mesSelecionado < valorMinimo) {
            input.value = null;
            input.placeholder = "Sem filtro";
        }
    }

    function zerarInputAno(event) {
        let input = event.target;
        let anoSelecionado = input.value;

        let valorMaximo = new Date().getFullYear();

        if (anoSelecionado > valorMaximo) {
            input.value = null;
            input.placeholder = "Sem filtro";
        } else if (anoSelecionado == 1) {
            input.value = null;
            input.placeholder = "Sem filtro";
        } else if (anoSelecionado == -1) {
            input.value = new Date().getFullYear();
            input.placeholder = new Date().getFullYear().toString();
        }
    }
</script>

<partial name="Header" view-data="@ViewData" />
<div class="app-wrapper">
    <div class="app-content pt-3 p-md-3 p-lg-4">
        <div class="container-xl">
            <div class="row g-3 mb-4 align-items-center justify-content-between">
                <div class="d-flex" style="justify-content: space-between">
                    <div class="d-flex flex-column">
                        <h1 class="app-page-title mb-0">Participação dos Pesquisadores</h1>
                    </div>

                    <form class="d-flex flex-row align-items-end gap-2" asp-controller="Participacao" asp-action="Index" method="get">
                        <div class="form-group">
                            <label for="mesInicio">Mês Inicial:</label>
                            <input id="mesInicio" name="mesInicio" class="form-control" type="number" placeholder="@(string.IsNullOrEmpty(mesInicio) ? "Sem filtro" : mesInicio)" value="@(string.IsNullOrEmpty(mesInicio) ? null : mesInicio)" max="12" oninput="zerarInputMes(event)" />
                        </div>
                        <div class="form-group">
                            <label for="anoInicio">Ano Inicial:</label>
                            <input id="anoInicio" name="anoInicio" class="form-control" type="number" placeholder="@(string.IsNullOrEmpty(anoInicio) ? "Sem filtro" : anoInicio)" value="@(string.IsNullOrEmpty(anoInicio) ? null : anoInicio)" oninput="zerarInputAno(event)" />
                        </div>
                        até
                        <div class="form-group">
                            <label for="mesFim">Mês Final:</label>
                            <input id="mesFim" name="mesFim" class="form-control" type="number" placeholder="@(string.IsNullOrEmpty(mesFim) ? "Sem filtro" : mesFim)" value="@(string.IsNullOrEmpty(mesFim) ? null : mesFim)" max="12" oninput="zerarInputMes(event)" />
                        </div>
                        <div class="form-group">
                            <label for="ano">Ano Final:</label>
                            <input id="anoFim" name="anoFim" class="form-control" type="number" placeholder="@(string.IsNullOrEmpty(anoFim) ? "Sem filtro" : anoFim)" value="@(string.IsNullOrEmpty(anoFim) ? null : anoFim)" oninput="zerarInputAno(event)" />
                        </div>
                        <button type="submit" class="btn app-btn-primary">Filtrar</button>
                    </form>
                </div>
            </div>

            <div class="tab-pane fade show active" id="valores" role="tabpanel" aria-labelledby="valores-tab">
                <div class="app-card app-card-orders-table shadow-sm mb-5">
                    <div class="app-card-body">
                        <div class="table-responsive">
                            <table class="table mb-0 text-left">
                                <thead>
                                    <tr>
                                        <th class="cell">Membro</th>
                                        <th class="cell">Valor Total (Prospecção)</th>
                                        <th class="cell">Valor Médio (Prospecção)</th>
                                        <th class="cell">Quantidade (Prospecção)</th>
                                        <th class="cell">Valor Total (Em Proposta)</th>
                                        <th class="cell">Valor Médio (Em Proposta)</th>                                        
                                        <th class="cell">Prospecções Em Proposta</th>
                                        <th class="cell">Prospecções Convertidas</th>
                                        <th class="cell">Taxa de Propostas</th>
                                        <th class="cell">Taxa de Conversão</th>
                                        <th class="cell">Índice</th>
                                        <th class="cell">Detalhes</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var participacaoTotal in @Model)
                                    {
                                        <tr>
                                            <div class="modal fade" id="ModalDetalhesParticipacaoTotal-@participacaoTotal.Id" tabindex="-1" aria-labelledby="ModalDetalhesParticipacaoTotal-@participacaoTotal.Id-Label"
                                                 aria-hidden="true">
                                                <div class="modal-dialog modal-dialog-centered modal-xl">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h1 class="modal-title fs-5" id="ModalDetalhesParticipacaoTotal-@participacaoTotal.Id-Label">Detalhes das Participações do Pesquisador</h1>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                        </div>
                                                        <div class="modal-body d-flex flex-column gap-1" style="background: #f5f6fe;">
                                                            <h5>Lista de Prospecções</h5>
                                                            @{
                                                                var participacoes = participacaoTotal.Participacoes;

                                                                participacoes.Sort((p1, p2) => p1.Convertida.CompareTo(p2.Convertida));
                                                                participacoes.Sort((p1, p2) => decimal.Compare(p1.ValorNominal, p2.ValorNominal));

                                                                <div class="row g-4">
                                                                    @foreach (var participacaoUnitaria in participacoes)
                                                                    {
                                                                        @await Html.PartialAsync("ListaParticipacoesUnitarias", participacaoUnitaria, ViewData)
                                                                    }
                                                                </div>
                                                            }
                                                        </div>
                                                        <div class="modal-footer">
                                                            <a class="btn btn-outline-primary" data-bs-dismiss="modal" aria-label="Close" role="button">
                                                                Fechar
                                                            </a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <td class="cell" style="text-overflow:clip">
                                                @participacaoTotal.Lider
                                            </td>
                                            <td class="cell">
                                                <div class="d-flex flex-row align-items-center gap-2">
                                                    @{
                                                        var rankValorTotalProspeccoes = participacaoTotal.RankPorIndicador["RankValorTotalProspeccoes"];
                                                    }
                                                    @Helpers.PrintarValorIndicadorParticipacao(rankValorTotalProspeccoes)
                                                    R$ @participacaoTotal.ValorTotalProspeccoes.ToString("N", cultura) (@rankValorTotalProspeccoes.ToString("N", cultura))
                                                </div>
                                            </td>
                                            <td class="cell">
                                                <div class="d-flex flex-row align-items-center gap-2">
                                                @{
                                                    var rankValorMedioProspeccoes = participacaoTotal.RankPorIndicador["RankValorMedioProspeccoes"];
                                                }
                                                @Helpers.PrintarValorIndicadorParticipacao(rankValorMedioProspeccoes)
                                                R$ @participacaoTotal.ValorMedioProspeccoes.ToString("N", cultura) (@rankValorMedioProspeccoes.ToString("N", cultura))
                                                </div>
                                            </td>
                                            <td class="cell">
                                                <div class="d-flex flex-row align-items-center gap-2">
                                                @{
                                                    var rankQuantidadeProspeccoes = @participacaoTotal.RankPorIndicador["RankQuantidadeProspeccoes"];
                                                }
                                                @Helpers.PrintarValorIndicadorParticipacao(rankQuantidadeProspeccoes)
                                                @participacaoTotal.QuantidadeProspeccoes (@rankQuantidadeProspeccoes.ToString("N", cultura))
                                                </div>
                                            </td>
                                            <td class="cell">
                                                <div class="d-flex flex-row align-items-center gap-2">
                                                    @{
                                                        var rankValorTotalProspeccoesComProposta = participacaoTotal.RankPorIndicador["RankValorTotalProspeccoesComProposta"];
                                                    }
                                                    @Helpers.PrintarValorIndicadorParticipacao(rankValorTotalProspeccoesComProposta)
                                                    R$ @participacaoTotal.ValorTotalProspeccoesComProposta.ToString("N", cultura) (@rankValorTotalProspeccoesComProposta.ToString("N", cultura))
                                                </div>
                                            </td>
                                            <td class="cell">
                                                <div class="d-flex align-items-center flex-row gap-2">
                                                    @{
                                                        var rankValorMedioProposta = participacaoTotal.RankPorIndicador["RankValorMedioProspeccoesComProposta"];
                                                    }
                                                    @Helpers.PrintarValorIndicadorParticipacao(rankValorMedioProposta)
                                                    R$ @participacaoTotal.ValorMedioProspeccoesComProposta.ToString("N", cultura) (@rankValorMedioProposta.ToString("N", cultura))
                                                </div>
                                            </td>
                                            <td class="cell">
                                                @{
                                                    var rankProspeccoesComProposta = participacaoTotal.RankPorIndicador["RankQuantidadeProspeccoesComProposta"];
                                                }
                                                @Helpers.PrintarValorIndicadorParticipacao(rankProspeccoesComProposta)
                                                @participacaoTotal.QuantidadeProspeccoesComProposta
                                                (@rankProspeccoesComProposta.ToString("N", cultura))
                                            </td>
                                            <td class="cell">
                                                <div class="d-flex align-items-center flex-row gap-2">
                                                    @{
                                                        var rankProspeccoesProjeto = participacaoTotal.RankPorIndicador["RankQuantidadeProspeccoesProjeto"];
                                                    }
                                                    @Helpers.PrintarValorIndicadorParticipacao(rankProspeccoesProjeto)
                                                    @participacaoTotal.QuantidadeProspeccoesProjeto
                                                    (@rankProspeccoesProjeto.ToString("N", cultura))
                                                </div>
                                            </td>
                                            <td class="cell">
                                                <div class="d-flex flex-row align-items-center gap-2">
                                                    @{
                                                        var taxaConversaoProposta = participacaoTotal.TaxaConversaoProposta;
                                                    }
                                                    @Helpers.PrintarValorIndicadorParticipacao(taxaConversaoProposta)
                                                    @((taxaConversaoProposta * 100).ToString("N", cultura))%
                                                </div>
                                            </td>
                                            <td class="cell">
                                                <div class="d-flex flex-row align-items-center gap-2">
                                                    @{
                                                        var taxaConversaoProjeto = participacaoTotal.TaxaConversaoProjeto;
                                                    }
                                                    @Helpers.PrintarValorIndicadorParticipacao(taxaConversaoProjeto)
                                                    @((taxaConversaoProjeto * 100).ToString("N", cultura))%
                                                </div>
                                            </td>
                                            <td class="cell">
                                                @{
                                                    decimal rank = participacaoTotal.Rank;
                                                    decimal rankMedio = (decimal)ViewData["medValorRank"];
                                                    <div class="d-flex flex-row align-items-center gap-2">
                                                        @if (rank > rankMedio)
                                                        {
                                                            if (rank > rankMedio * 2)
                                                            {
                                                                <svg style="color: green" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-up" viewBox="0 0 16 16">
                                                                    <path fill-rule="evenodd" d="M7.646 2.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 3.707 2.354 9.354a.5.5 0 1 1-.708-.708l6-6z" />
                                                                    <path fill-rule="evenodd" d="M7.646 6.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 7.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z" />
                                                                </svg>
                                                            }
                                                            else
                                                            {
                                                                if (rank - 1 > 1)
                                                                {
                                                                    <svg style="color: seagreen" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-up" viewBox="0 0 16 16">
                                                                        <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z" />
                                                                    </svg>
                                                                }
                                                                else
                                                                {
                                                                    <svg style="color: dodgerblue" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-bar-contract" viewBox="0 0 16 16">
                                                                        <path fill-rule="evenodd" d="M3.646 14.854a.5.5 0 0 0 .708 0L8 11.207l3.646 3.647a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 0 0 0 .708zm0-13.708a.5.5 0 0 1 .708 0L8 4.793l3.646-3.647a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 0-.708zM1 8a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 0 1h-13A.5.5 0 0 1 1 8z" />
                                                                    </svg>
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (rank < -(rankMedio * 2))
                                                            {
                                                                <svg style="color:red" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-down" viewBox="0 0 16 16">
                                                                    <path fill-rule="evenodd" d="M1.646 6.646a.5.5 0 0 1 .708 0L8 12.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z" />
                                                                    <path fill-rule="evenodd" d="M1.646 2.646a.5.5 0 0 1 .708 0L8 8.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z" />
                                                                </svg>
                                                            }
                                                            else
                                                            {
                                                                <svg style="color: darkred" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
                                                                    <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z" />
                                                                </svg>
                                                            }
                                                        }

                                                        @((participacaoTotal.Rank - 1).ToString("N", cultura))
                                                    </div>
                                                }
                                            </td>
                                            <td class="cell">
                                                <button type="button" data-bs-target="#ModalDetalhesParticipacaoTotal-@participacaoTotal.Id" data-bs-toggle="modal" class="btn-sm app-btn-primary">
                                                    Detalhes
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <partial name="Footer" />
</div>
