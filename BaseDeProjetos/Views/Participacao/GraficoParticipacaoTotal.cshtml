@using System.Globalization;
@using Newtonsoft.Json
@using BaseDeProjetos.Helpers;
@using BaseDeProjetos.Helpers;
@model BaseDeProjetos.Models.ParticipacaoTotalViewModel
@{
    var cultura = new CultureInfo("pt-BR");
}


<script>
    function carregarGraficoTemporal(dadosRetornados, modelId) {
        let labels = null;
        let values = null;

        if (dadosRetornados) {
            labels = dadosRetornados.Labels;
            values = dadosRetornados.Valores;
        }
        else {
            console.error("Os dados retornados estão nulos!");
        }

        let name = `participacao-${modelId}`;

        let chart = Highcharts.chart(name, {
            chart: {
                type: 'line'
            },
            title: {
                text: 'Valor das Propostas ao Longo do Tempo'
            },
            subtitle: {
                text: 'Somatório cumulativo'
            },
            xAxis: {
                categories: labels,
            },
            yAxis: {
                title: {
                    text: 'Valor em R$'
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: true,
                        formatter: function () {
                            return new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(this.y);
                        }
                    },
                    enableMouseTracking: true
                }
            },
            tooltip: {
                formatter: function () {
                    const formattedValue = new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(this.y);
                    return `Valor das Propostas: ${formattedValue}`;
                }
            },
            series: [{
                name: 'Valor das Propostas',
                data: values
            }]
        });
    }

    function esconderBotao(idUsuario) {
        document.querySelector(`#button-${idUsuario}`).style.display = 'none';
    }

    function exibirLoading(idUsuario) {
        const internalDiv = document.querySelector(`#internalDiv-${idUsuario}`);
        if (internalDiv) {
            internalDiv.classList.add("spinner-border");
            internalDiv.innerHTML = '';
        } else {
            console.error(`Element with id 'internalDiv-${idUsuario}' not found.`);
        }
    }

    function esconderLoading(idUsuario) {
        const internalDiv = document.querySelector(`#internalDiv-${idUsuario}`);
        if (internalDiv) {
            internalDiv.classList.remove("spinner-border");
        }
    }

    async function puxarDadosGraficoTemporal(idUsuario) {
        let response = await fetch(`${location.origin}/Participacao/RetornarDadosGraficoTemporal/${idUsuario}`);
        const data = await response.json();
        return data;
    }

    function exibirDados(idUsuario, modelId) {
        exibirLoading(idUsuario);
        puxarDadosGraficoTemporal(idUsuario, modelId).then(data => {
            esconderBotao(idUsuario);
            esconderLoading(idUsuario);
            carregarGraficoTemporal(data, modelId);
        });
    }
</script>

@{
    var idUsuario = Model.Lider.Id;
}

<button type="button" id="button-@(idUsuario)" class="btn app-btn-primary" onclick="exibirDados('@(idUsuario)','@(Model.Id)')"><div id="internalDiv-@(idUsuario)">Exibir Gráfico</div></button>
<figure class="highcharts-figure">
    <div id="participacao-@(Model.Id)">
    </div>
</figure>
<hr />



