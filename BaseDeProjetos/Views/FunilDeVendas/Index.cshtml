@model ProspeccoesViewModel
@using BaseDeProjetos.Helpers
@using BaseDeProjetos.Models.Enums
@using BaseDeProjetos.Models.ViewModels
@using Microsoft.AspNetCore.Http
@{
    ViewData["Title"] = "Funil de Vendas";

    var abasFunil = new List<AbaFunil>();

    var dadosDaRota = ViewContext.RouteData;
    string aba = dadosDaRota.Values["aba"] as string;
    string casa = dadosDaRota.Values["casa"] as string;
    string searchString = ViewBag.searchString as string;

    if (string.IsNullOrEmpty(casa))
    {
        casa = ViewBag.UsuarioCasa as string;
    }

    List<Instituto> institutos = new List<Instituto>((Instituto[])Enum.GetValues(typeof(Instituto))).Where(i => i != Instituto.Super).ToList();
}

<script>
    var casa = "@casa"
</script>

<script src="~/js/FunildeVendas/modalPreCreateProsp.js"></script>
<script src="~/js/FunildeVendas/modalEditProsp.js"></script>
<script src="~/js/FunildeVendas/modalCreateProsp.js"></script>
<script src="~/js/FunildeVendas/validacoesFunilDeVendas.js"></script>

<partial name="Header" view-data="@ViewData" />
<style>
    .card-container {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        margin-top: 10px;
    }

    .card {
        width: 100%;
        display: flex;
        flex-direction: row;
    }

    .card-preview {
        background-color: #2A265F;
        color: #fff;
        width: 20%;
    }

        .card-preview a {
            display: inline-block;
            font-size: 12px;
            opacity: 0.6;
            margin-top: 30px;
            text-decoration: none;
        }

        .card-preview h2 {
            letter-spacing: 1px;
            text-align: center;
        }

    .card-info {
        width: 80%;
        display: flex;
        justify-content: flex-start;
    }

    .content-left,
    .content-right {
        width: 50%;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .description-info {
        margin-top: 10px;
        margin-left: 5px;
    }

    #card-body,
    #content {
        display: flex;
        flex-direction: row;
    }

    #content {
        flex-direction: column;
        width: 80%;
    }

    #box-btn-actions {
        width: 20%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: flex-end;
    }

    .btn-acao {
        width: 60px;
        font-size: 14px;
        padding: 0;
    }

    .empresa-preview {
        background-color: #fff;
        color: #2A265F;
        min-width: 200px;
        max-height: 200px;
        max-width: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>

<div class="app-wrapper">
    <div class="app-content pt-3 p-md-3 p-lg-4">
        <div class="container-xl">
            <div class="row g-3 mb-2 align-items-center justify-content-between">
                <div class="col-auto">
                    <h1 class="app-page-title mb-0">Prospecções</h1>
                </div>
                <div class="col-auto">
                    <div class="page-utilities">
                        <div class="d-flex gap-2 justify-content-start justify-content-md-end align-items-center">
                            <!--se a rota não for Index-->
                            @if (!string.IsNullOrEmpty(aba))
                            {
                                <form class="table-search-form row gx-1 align-items-center">
                                    <div class="d-flex gap-2 flex-row align-items-center">
                                        <input type="text" id="search-orders" name="SearchString" value='@ViewData["CurrentFilter"]' class="form-control search-orders" placeholder="Buscar..." autocomplete="off">
                                        <button type="submit" class="btn app-btn-primary"><i class="bi bi-search"></i></button>
                                    </div>
                                </form>
                                <button type="submit" class="d-none btn app-btn-primary">Lista Completa</button>
                            }

                            <div class="col-auto">
                                <a class="btn app-btn-primary" data-bs-toggle="modal" href="#preCriarProspModalToggle" role="button">
                                    <i class="bi bi-plus-circle-fill"></i> Nova Prospecção
                                </a>
                                @await Component.InvokeAsync("ModalPreCreateProsp")
                                @await Component.InvokeAsync("ModalCreateProsp")
                                <div id="modalCreateFollowUpProspContainer"></div> <!-- CONTAINER PARA ARMAZENAR O MODAL CREATE FOLLOWUP TEMPORARIAMENTE -->
                            </div>
                            @*<div class="col-auto" id="container-ajuda">
                            <a type="button" class="btn button-flash text-white" data-bs-toggle="modal" href="#modalTutorialFdv" role="button">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-question-octagon-fill" viewBox="0 0 16 16">
                            <path d="M11.46.146A.5.5 0 0 0 11.107 0H4.893a.5.5 0 0 0-.353.146L.146 4.54A.5.5 0 0 0 0 4.893v6.214a.5.5 0 0 0 .146.353l4.394 4.394a.5.5 0 0 0 .353.146h6.214a.5.5 0 0 0 .353-.146l4.394-4.394a.5.5 0 0 0 .146-.353V4.893a.5.5 0 0 0-.146-.353L11.46.146zM5.496 6.033a.237.237 0 0 1-.24-.247C5.35 4.091 6.737 3.5 8.005 3.5c1.396 0 2.672.73 2.672 2.24 0 1.08-.635 1.594-1.244 2.057-.737.559-1.01.768-1.01 1.486v.105a.25.25 0 0 1-.25.25h-.81a.25.25 0 0 1-.25-.246l-.004-.217c-.038-.927.495-1.498 1.168-1.987.59-.444.965-.736.965-1.371 0-.825-.628-1.168-1.314-1.168-.803 0-1.253.478-1.342 1.134-.018.137-.128.25-.266.25h-.825zm2.325 6.443c-.584 0-1.009-.394-1.009-.927 0-.552.425-.94 1.01-.94.609 0 1.028.388 1.028.94 0 .533-.42.927-1.029.927z" />
                            </svg> Tutorial!
                            </a>
                            </div>*@
                        </div>
                    </div>
                </div>

            </div>

            <div class="d-flex align-items-center justify-content-end mb-2 gap-2">
                <span>Ano:</span>
                <select class="form-select w-auto" id="ano" name="ano" onchange="updateLink()">
                    <option value="Todos">Todos</option>
                    @{
                        int anoFinal = 2019;
                        int anoAtual = DateTime.Now.Year;
                        while (anoAtual >= anoFinal)
                        {
                            <option value="@anoAtual">@anoAtual</option>
                            anoAtual--;
                        }
                    }
                </select>

                @if (!string.IsNullOrEmpty(aba))
                {
                    <div>Quantidade de Prospecções:</div>
                    <form method="get" asp-action="Index" asp-controller="FunildeVendas" asp-route-casa="@casa" asp-route-aba="@aba">
                        <select class="form-select" id="tamanhoPagina" onchange="changePageSize()">
                            @if (ViewBag.TamanhoPagina == 20 || ViewBag.TamanhoPagina == null)
                            {
                                <option value="20" selected>20</option>
                            }
                            else
                            {
                                <option value="20">20</option>
                            }

                            @if (ViewBag.TamanhoPagina == 40)
                            {
                                <option value="40" selected>40</option>
                            }
                            else
                            {
                                <option value="40">40</option>
                            }

                            @if (ViewBag.TamanhoPagina == 60)
                            {
                                <option value="60" selected>60</option>
                            }
                            else
                            {
                                <option value="60">60</option>
                            }

                            @if (ViewBag.TamanhoPagina == 100)
                            {
                                <option value="100" selected>100</option>
                            }
                            else
                            {
                                <option value="100">100</option>
                            }
                        </select>
                    </form>
                }
            </div>

            @if (Model.Prospeccoes.Count() != 0)
            {
                @* abasFunil.Add(new AbaFunil("", string.IsNullOrEmpty(aba))); *@
                abasFunil.Add(new AbaFunil("Ativas", !string.IsNullOrEmpty(aba) ? aba.ToLowerInvariant() == "ativas" : false));
                abasFunil.Add(new AbaFunil("Com Proposta", !string.IsNullOrEmpty(aba) ? aba.ToLowerInvariant() == "comproposta" : false));
                abasFunil.Add(new AbaFunil("Concluidas", !string.IsNullOrEmpty(aba) ? aba.ToLowerInvariant() == "concluidas" : false));
                abasFunil.Add(new AbaFunil("Planejadas", !string.IsNullOrEmpty(aba) ? aba.ToLowerInvariant() == "planejadas" : false));
                abasFunil.Add(new AbaFunil("Erradas", !string.IsNullOrEmpty(aba) ? aba.ToLowerInvariant() == "erradas" : false));

                <nav id="orders-table-tab" class="orders-table-tab app-nav-tabs nav shadow-sm flex-column flex-sm-row mb-4">
                    @if (string.IsNullOrEmpty(aba))
                    {
                        <a class="flex-sm-fill text-sm-center nav-link active" id="prospeccao-dashboard-tab" data-bs-toggle="tab" href="#prospeccao-dashboard" role="tab" aria-controls="prospeccao-dashboard" aria-selected="true">Dashboard</a>
                        @foreach (var abaFunil in abasFunil)
                        {
                            <a class="flex-sm-fill text-sm-center nav-link"
                               asp-action="@abaFunil.Action"
                               asp-controller="@abaFunil.Controller"
                               asp-route-casa="@casa"
                               asp-route-aba="@abaFunil.RouteAba"
                               aria-selected="false">
                                @abaFunil.Nome
                            </a>
                        }
                    }
                    else
                    {
                        <a class="flex-sm-fill text-sm-center nav-link" id="prospeccao-dashboard-tab" data-bs-toggle="tab" href="#prospeccao-dashboard" role="tab" aria-controls="prospeccao-dashboard" aria-selected="false">Dashboard</a>
                        @foreach (var abaFunil in abasFunil)
                        {
                            string classes = "flex-sm-fill text-sm-center nav-link";
                            if (abaFunil.AbaAtiva == true)
                            {
                                classes += " active";
                            }
                            <a class="@classes"
                               asp-action="@abaFunil.Action"
                               asp-controller="@abaFunil.Controller"
                               asp-route-casa="@casa"
                               asp-route-aba="@abaFunil.RouteAba"
                               aria-selected="@((aba.ToLowerInvariant() == @abaFunil.Nome.ToLowerInvariant()).ToString().ToLowerInvariant())">
                                @abaFunil.Nome
                            </a>
                        }
                    }
                </nav>
                <div class="tab-content" id="orders-table-tab-content">
                    @if (string.IsNullOrEmpty(aba))
                    {
                        <div class="tab-pane fade show active" id="prospeccao-dashboard" role="tabpanel" aria-labelledby="prospeccao-dashboard-tab">
                            <div class="app-card app-card-orders-table mb-5">
                                <div class="app-card-body">
                                    <partial name="graph_funil" view-data="@ViewData" />
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        @await Html.PartialAsync("ListaProsp", Model)
                    }
                </div>
            }
            else
            {
                <div class="d-flex justify-content-center align-items-center flex-column" style="height: 50vh">
                    <h1 class="bi bi-exclamation-triangle text-warning"></h1>
                    @if (string.IsNullOrEmpty(searchString))
                    {
                        <h2>
                            Página de Prospecções não encontrada.
                        </h2>
                    }
                    else
                    {
                        <h2>
                            Não foram encontradas prospecções com o termo "@searchString".
                        </h2>
                    }
                    <div>Clique <a asp-controller="FunilDeVendas" asp-action="Index" asp-route-tamanhoPagina="@ViewBag.TamanhoPagina" asp-route-casa="@casa" asp-route-aba="@aba" asp-route-numeroPagina="1">aqui</a> para voltar para a primeira página.</div>
                </div>
            }

            @if (!string.IsNullOrEmpty(aba))
            {
                <nav class="app-pagination">
                    <ul class="pagination justify-content-center">
                        @if (Model.Pager.TotalPaginas > 1)
                        {
                            @if (Model.Pager.TemPaginaAnterior)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-controller="FunilDeVendas" asp-action="Index" asp-route-casa="@casa" asp-route-aba="@aba" asp-route-tamanhoPagina="@ViewBag.TamanhoPagina" asp-route-SearchString="@searchString" asp-route-numeroPagina="@(Model.Pager.PaginaAtual - 1)">Anterior</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <a class="page-link" asp-action="">Anterior</a>
                                </li>
                            }

                            @foreach (var numeroPagina in Model.Pager.Pages)
                            {
                                if (numeroPagina == Model.Pager.PaginaAtual)
                                {
                                    <li class="page-item active">
                                        <a class="page-link" asp-controller="FunilDeVendas" asp-action="Index" asp-route-tamanhoPagina="@ViewBag.TamanhoPagina" asp-route-casa="@casa" asp-route-aba="@aba" asp-route-SearchString="@searchString" asp-route-numeroPagina="@(numeroPagina-1)">@numeroPagina</a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item">
                                        <a class="page-link" asp-controller="FunilDeVendas" asp-action="Index" asp-route-casa="@casa" asp-route-tamanhoPagina="@ViewBag.TamanhoPagina" asp-route-aba="@aba" asp-route-SearchString="@searchString" asp-route-numeroPagina="@numeroPagina">@numeroPagina</a>
                                    </li>
                                }
                            }

                            @if (Model.Pager.TemProximaPagina)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-controller="FunilDeVendas" asp-action="Index" asp-route-casa="@casa" asp-route-SearchString="@searchString" asp-route-tamanhoPagina="@ViewBag.TamanhoPagina" asp-route-aba="@aba" asp-route-numeroPagina="@(Model.Pager.PaginaAtual + 1)">Proximo</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <a class="page-link">Proximo</a>
                                </li>
                            }
                        }

                    </ul>
                </nav>
            }
        </div>
    </div>
    <partial name="Footer" />
</div>
@*<div id="modalTut">
  <div class="modal fade" id="modalTutorialFdv" aria-hidden="true" aria-labelledby="modalTutorialFdvLabel"
    tabindex="-1">
	<div class="modal-dialog modal-xl modal-dialog-centered" style="flex-direction: column">
	  <div class="modal-content">
		<div class="modal-header">
		  <h1 class="modal-title fs-5" id="modalTutorialFdvLabel">Tutorial Funil de Vendas</h1>
		  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
		</div>
		<div class="modal-body">
		  <div class="d-flex align-items-start justify-content-center">
			<div class="app-card-title">Tutorial para Prospecções Planejadas:</div>
			<iframe width="960" height="540" src="https://www.youtube-nocookie.com/embed/8LQDTjAz-UM"
              title="YouTube video player" frameborder="0"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
              allowfullscreen></iframe>
			<div class="app-card-title">Tutorial para o Funil de Vendas:</div>
			<iframe width="960" height="540" src="https://www.youtube-nocookie.com/embed/4RTvGaA0FC4"
              title="YouTube video player" frameborder="0"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
              allowfullscreen></iframe>

		  </div>
		</div>
		<div class="modal-footer">
		  <button class="btn btn-primary" data-bs-dismiss="modal">Sair</button>
		</div>
	  </div>
	</div>
  </div>
</div>*@