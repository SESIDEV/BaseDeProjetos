@model IEnumerable<BaseDeProjetos.Models.Prospeccao>
@using System.Globalization
@using BaseDeProjetos.Helpers
@{
    var ptbr = new CultureInfo("pt-BR");    
    
}
<style>
    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    /*** Alteração de layout lista de empresas e prospecções / Funil de Vendas ***/

    .bg-esfriando {
        background-color: #fff462;
    }

    .bg-frio {
        background-color: #beffff;
    }

    .bg-morno {
        background-color: #ff8f50;
    }

    .bg-quente {
        background-color: #ff5c50;
    }

    .card-container {
        background-color: #fff;
        border-radius: 10px;
        overflow: hidden;
        margin-top: 10px;
    }

    .card {
        width: 100%;
        display: flex;
        flex-direction: row;
    }

    .card-preview {
        background-color: #2A265F;
        color: #fff;
        width: 20%;
    }

    .card-preview a {
        display: inline-block;
        font-size: 12px;
        opacity: 0.6;
        margin-top: 30px;
        text-decoration: none;
    }

    .card-preview h2 {
        letter-spacing: 1px;
        text-align: center;
    }

    .card-info {
        width: 80%;
        display: flex;
        justify-content: flex-start;
    }

    .content-left,
    .content-right {
        width: 50%;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .description-info {
        margin-top: 10px;
        margin-left: 5px;
    }

    #card-body,
    #content {
        display: flex;
        flex-direction: row;
    }

    #content {
        flex-direction: column;
        width: 80%;
    }

    #box-btn-actions {
        width: 20%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: flex-end;
    }

    .btn-acao {
        width: 60px;
        font-size: 14px;
        padding: 0;
    }

    .empresa-preview {
        background-color: #fff;
        color: #2A265F;
        min-width: 200px;
        max-height: 200px;
        max-width: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    #logoEmpresa {
        width: 100%;
        height: 100%;
        max-height: 40px;
        max-width: 40px;
        object-fit: contain;
    }

    /*** Alteração de layout lista de empresas e prospecções / Funil de Vendas ***/
</style>
<script>
    var bt = document.querySelector('#bt')

    bt.addEventListener('click', e => {
        e.preventDefault();
    })

    $(function () {
        $('[data-toggle="popover"]').popover()
    })
</script>
@foreach (var item in Model)
{
    <div class="modal fade" id="modalDetalhes-@item.Id" tabindex="-1" aria-labelledby="modalDetalhes-@item.Id-Label" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="modalDetalhes-@item.Id-Label">Detalhes da Prospecção</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                    <div class="modal-body">
                        <h1 class="app-card-title">Empresa:</h1>
                        <span>@item.Empresa.Nome</span>
                        <h1 class="app-card-title">Líder</h1>
                        <span>@item.Usuario.UserName</span>
                        <h1 class="app-card-title">Projeto:</h1>
                        <span>@item.NomeProspeccao</span>
                        <h1 class="app-card-title">Tipo de Contratação:</h1>
                        <span>@item.TipoContratacao.GetDisplayName()</span>
                        <h1 class="app-card-title">Status:</h1>
                        <span>@item.Status.OrderBy(followup => followup.Data).Last().Status.GetDisplayName()</span>
                        <h1 class="app-card-title">Valor:</h1>
                        <nobr>
                            @if (item.ValorProposta != 0)
                            {
                                <span>R$ @Helpers.FormatarValoresDashboards((decimal)item.ValorProposta)</span>
                            }
                            else if (item.ValorEstimado != 0)
                            {
                                <span>R$ @Helpers.FormatarValoresDashboards((decimal)item.ValorEstimado)</span>
                            }
                            else
                            {
                                <span>Valor não informado</span>
                            }
                        </nobr>
                        <h1 class="app-card-title">Último Status:</h1>
                        <span>@item.Status.OrderBy(p => p.Data).Last().Anotacoes</span>
                        <p>Data: @item.Status.OrderBy(p => p.Data).Last().Data.ToString("dd/MM/yyyy", CultureInfo.CreateSpecificCulture("pt-BR"))</p>
                    </div>
                <div class="modal-footer">
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-primary">Editar</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-primary">Histórico</a>
                    <a asp-action="Atualizar" asp-route-id="@item.Id" class="btn btn-outline-primary">Atualizar</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-outline-primary">Remover</a>

                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                    @*<button type="button" class="btn btn-primary">Save changes</button>*@
                </div>
            </div>
        </div>
    </div>
    <tr>
        @if (item.Empresa.Logo != null)
        {
            <td class="cell"><img src="@item.Empresa.Logo" id="logoEmpresa" alt="Logo da Empresa" style="background-color:white"></td>
        } else
        {
            <td class="cell"><nobr id="logo_alt">Sem Logo</nobr></td>
        }
        <td class="cell">@item.Empresa.Nome</td> @*Empresa*@
        <td class="cell"><span class="badge bg-success">@item.Usuario.UserName</span></td> @*Líder*@
        @if (item.NomeProspeccao != null)
        {
            Console.WriteLine(item.NomeProspeccao);
            <td class="cell"><span>@item.NomeProspeccao</span></td> @*Projeto*@
        } else
        {
            <td class="cell"><span>A definir</span></td> @*Projeto*@
        }
        @{
            var subtracaoUltimoStatus = @DateTime.Now.Subtract(@item.Status.Last().Data).Days;
        }
        <td class="cell">
            <span>@item.TipoContratacao.GetDisplayName()</span> @*Tipo Contratação*@
        </td>
        <td class="cell"><span>@item.Status.OrderBy(followup => followup.Data).Last().Status.GetDisplayName()</span></td> @*Status*@
        <td class="cell">
            @FunilHelpers.VerificarTemperatura(subtracaoUltimoStatus)
        </td>
        <td class="cell">
            @if (item.ValorProposta != 0)
            {
                <span>R$ @Helpers.FormatarValoresDashboards((decimal)item.ValorProposta)</span>
            }
            else if (item.ValorEstimado != 0)
            {
                <span>R$ @Helpers.FormatarValoresDashboards((decimal)item.ValorEstimado)</span>
            }
            else
            {
                <span>Valor não informado</span>
            }
        </td>
        <td class="cell"><button type="button" data-bs-target="#modalDetalhes-@item.Id" data-bs-toggle="modal" class="btn-sm app-btn-secondary">Detalhes</button></td> 
    </tr>
}

@*@foreach (var item in Model)
{
    <div class="card-container container-fluid">
        <div class="card">
            <div class="empresa-preview">
                @if (item.Empresa.Logo != null)
                {
                    <img style="background-color:white" id="logoEmpresa" src="@item.Empresa.Logo" alt="Logo da Empresa" />
                }
                else
                {
                    <h5 id="logo_alt">Sem Logo</h5>
                }
            </div>
            <div class="card-info">
                <div class="content-left">
                    <p class="description-info"><strong>Empresa: </strong>@item.Empresa.Nome</p>
                    <p class="description-info"><strong>Projeto: </strong>@item.NomeProspeccao</p>
                    <p class="description-info"><strong>Linha: </strong>@item.LinhaPequisa.GetDisplayName()</p>
                    
                    @{var subtracaoUltimoStatus = @DateTime.Now.Subtract(@item.Status.Last().Data).Days;}
                                        
                    <p class="description-info">
                        <strong>Temperatura:@FunilHelpers.VerificarTemperatura(subtracaoUltimoStatus)</strong>                        
                    </p>                    
                </div>

                <div class="content-right">
                    <p class="description-info"><strong>Tipo Contratação: </strong>@item.TipoContratacao.GetDisplayName()
                    </p>
                    @if (item.Usuario != null)
                    {
                        <div class="description-info" style="display:flex; align-items: center; gap: 3px;">
                            <strong>Líder:</strong><button type="button" id="info" class="badge text-bg-secondary"
                        data-bs-container="body" data-bs-toggle="popover" data-bs-placement="right"
                        data-bs-content="Right popover">@item.Usuario.UserName</button>
                        </div>
                    }
                    else
                    {
                        <p class="description-info"><strong>Lider: </strong>Não Informado</p>
                    }
                    @if (item.Status.Last().Status == StatusProspeccao.ComProposta)
                    {
                        <p class="description-info"><strong>Status: </strong>@item.Status.OrderBy(p => p.Data).Last().Status.GetDisplayName()</p>

                        @if (item.ValorProposta != 0)
                        {
                            <p class="description-info"><strong>Valor da Proposta:</strong> R$ @Helpers.FormatarValoresDashboards((decimal)item.ValorProposta)</p>
                        }
                        else if (item.ValorEstimado != 0)
                        {
                            <p class="description-info"><strong>Valor Estimado:</strong> R$ @Helpers.FormatarValoresDashboards((decimal)item.ValorEstimado)</p>
                        }
                        else
                        {
                            <p class="description-info"><strong>Valor Estimado:</strong> Valor não informado</p>
                        }
                    }
                    else
                    {
                        <p class="description-info"><strong>Status: </strong>@item.Status.OrderBy(p => p.Data).Last().Status.GetDisplayName()</p>
                        @if (item.ValorEstimado != 0)
                        {
                            <p class="description-info"><strong>Valor Estimado:</strong> R$ @Helpers.FormatarValoresDashboards((decimal)item.ValorEstimado)</p>
                        }
                        else
                        {
                            <p class="description-info"><strong>Valor Estimado:</strong> Valor não informado</p>
                        }
                    }
                </div>
            </div>
        </div>
        <button id="btn-collapse" class="btn btn-outline-secondary container-fluid" type="button" data-toggle="collapse"
        data-target="#@item.Id" aria-expanded="false" aria-controls="collapseExample">
            Ver mais detalhes
        </button>
        <div class="collapse" id="@item.Id">
            <div class="card card-body" id="card-body">
                <div id="content">
                    <div id="title-status">
                        <h4>Último Status:</h4>
                    </div>
                    <div>
                        <p>@item.Status.OrderBy(p => p.Data).Last().Anotacoes</p>
                    </div>
                    <div>
                        Data: @item.Status.OrderBy(p => p.Data).Last().Data.ToString("dd/MM/yyyy", CultureInfo.CreateSpecificCulture("pt-BR"))
                    </div>
                </div>
            </div>
            <div style="display:flex; justify-content: center; gap: 5px;">
                <a asp-action="Edit" asp-route-id="@item.Id"><button class="btn btn-outline-primary">Editar</button></a>
                <a asp-action="Details" asp-route-id="@item.Id"><button class="btn btn-outline-primary">Histórico</button></a>
                <a asp-action="Atualizar" asp-route-id="@item.Id"><button class="btn btn-outline-primary">Atualizar</button></a>
                <a asp-action="Delete" asp-route-id="@item.Id"><button class="btn btn-outline-primary">Remover</button></a>
            </div>
        </div>
    </div>

}*@