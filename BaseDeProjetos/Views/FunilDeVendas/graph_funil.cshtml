@model ProspeccoesViewModel
@using System
@using BaseDeProjetos.Helpers
@using BaseDeProjetos.Models.Enums
@using BaseDeProjetos.Models.ViewModels
<script type="text/javascript" src="~/js/FunildeVendas/graficosDashboardFunil.js"></script>
<style>
    .center {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 200px;
        border: 3px solid;
    }
</style>
@{
    Dictionary<string, int> contagem = new Dictionary<string, int>();

    foreach (TipoContratacao contratacao in Enum.GetValues(typeof(TipoContratacao)))
    {
        foreach (StatusProspeccao status in Enum.GetValues(typeof(StatusProspeccao)))
        {
            var key = contratacao.ToString() + "_" + status.ToString();
            contagem[key] = Model.ProspeccoesGrafico.Where(p => FunilHelpers.VerificarContratacao(p, contratacao) &&
            FunilHelpers.VerificarStatus(p, status)).ToList().Count();
        }
    }


    foreach (TipoContratacao contratacao in Enum.GetValues(typeof(TipoContratacao)))
    {
        foreach (StatusProspeccao status in Enum.GetValues(typeof(StatusProspeccao)))
        {
            var key = contratacao.ToString() + "_" + status.ToString() + "_Ativas";
            contagem[key] = Model.ProspeccoesAtivas.Where(p => FunilHelpers.VerificarContratacao(p, contratacao) &&
            FunilHelpers.VerificarStatus(p, status)).ToList().Count();
        }
    }

    float numProspeccoesTotais = Model.ProspeccoesGrafico.Count();
    float numPropostas = Model.ProspeccoesGrafico.Count(p => FunilHelpers.VerificarStatus(p, StatusProspeccao.ComProposta));
    float numPropostasAtivas = Model.ProspeccoesGrafico.Count(p => FunilHelpers.VerificarStatus(p, StatusProspeccao.ComProposta) && p.Status.All(s => s.Status < StatusProspeccao.Convertida));
    float numConvertidas = Model.ProspeccoesGrafico.Count(p => p.Status.Any(s => s.Status == StatusProspeccao.Convertida));
    float numNaoConvertidas = Model.ProspeccoesGrafico.Count(p => p.Status.Any(s => s.Status == StatusProspeccao.NaoConvertida));
    float numCanceladas = Model.ProspeccoesGrafico.Count(p => p.Status.Any(s => s.Status == StatusProspeccao.Suspensa));
    float numProspeccoesEmAndamento = numProspeccoesTotais - numConvertidas - numNaoConvertidas - numCanceladas;
    float numProspeccoesEmAndamentoComProposta = numPropostas - numConvertidas - numNaoConvertidas;
    float numEmpresas = Model.ProspeccoesNaoPlanejadas.Select(p => p.Empresa.EmpresaUnique).Distinct().Count();
    float numEmpresasAtivas = Model.ProspeccoesAtivas.Select(p => p.Empresa.EmpresaUnique).Distinct().Count();
    float numPlanejadas = Model.ProspeccoesGrafico.Count(p => p.Status.Any(s => s.Status == StatusProspeccao.Planejada));
    float numAvancadas = Model.ProspeccoesAvancadas.Count();
    float numConvertidasENaoConvertidas = numConvertidas + numNaoConvertidas;
    float numInfrutiferas = numCanceladas + numNaoConvertidas;
    float valorTotalPropostasAtivas = 0;
    float valorTotalPropostas = 0;

    double taxaConversao = (numConvertidas / numConvertidasENaoConvertidas);    
    double taxaInfrutiferas = numInfrutiferas / (numProspeccoesTotais - (numAvancadas - numConvertidas - numNaoConvertidas));

    foreach (Prospeccao prosp in Model.ProspeccoesAtivas)
    { 
        valorTotalPropostasAtivas += (float)prosp.ValorProposta; 
    }

    if (numPropostasAtivas > 0) { valorTotalPropostasAtivas = valorTotalPropostasAtivas / numPropostasAtivas; }

    foreach (Prospeccao prosp in Model.ProspeccoesGrafico)
    {
        valorTotalPropostas += (float)prosp.ValorProposta;
    }

    if (numPropostas > 0)
    {
        valorTotalPropostas = valorTotalPropostas / numPropostas;
    }

    string valorAtivasString = valorTotalPropostasAtivas.ToString("C2");
    string valorString = valorTotalPropostas.ToString("C2");

    TimeSpan DiferencaTodas = FunilHelpers.RetornarValorDiferencaTempo(Model.ProspeccoesAvancadas.ToList());
    TimeSpan DiferencaAtivas = FunilHelpers.RetornarValorDiferencaTempo(Model.ProspeccoesAtivas.Where(p => p.Status.Any(f => f.Status == StatusProspeccao.ComProposta)).ToList());

}

@if (numProspeccoesTotais > 1)
{
    <div class="pb-4">
        <div class="app-card app-card-chart shadow-sm h-100">
            <div class="app-card-header p-3">
                <h4 class="app-card-title">Funil de Vendas</h4>
            </div>
            <div class="app-card-body p-4">
                <figure class="highcharts-figure">
                    <div id="funil" class="d-flex justify-content-center align-items-center">
                        <partial name="_Loading"  />
                    </div>
                </figure>
            </div>
            <div class="p-4">
                <input class="form-check-input" type="checkbox" id="caixaSelecaoAtivas" onclick="marcada()">
                <label class="form-check-label" for="botao_ativas">Mostrar apenas as ativas</label>
            </div>
        </div>
    </div>

    <div class="pb-4">
        <div class="d-flex gap-4 justify-content-between align-items-start shadow-sm">
            <div class="app-card app-card-chart w-50 h-100">
                <div class="app-card-header p-3">
                    <h4 class="app-card-title">Indicadores de Prospecção</h4>
                </div>
                <div class="app-card-body row text-center p-3 p-lg-4">
                    <div class="col-12">
                        <!--[Iury] sIDs da checkbox \/ -->
                        <h1 id="EmpresasProspectadas" class="display-3"><partial name="_Loading" /></h1>
                        <small id="CheckboxProspAtivas2">Número de empresas prospectadas</small>
                        <hr />
                    </div>
                    <div class="col-4">
                        <h4 id="TempoMedioContato"><partial name="_Loading" /></h4>
                        <small id="CheckboxProspAtivas10">Tempo médio entre o primeiro contato e a emissão da
                            proposta</small>
                    </div>
                    <div class="col-4">
                        <!--[Iury] IDs da checkbox \/ -->
                        <h4 id="ProspContatoInicial"><partial name="_Loading" /></h4>
                        <small id="CheckboxProspAtivas3">Contatos iniciais de prospecção</small>
                    </div>
                    <div class="col-4">
                        <h4 id="PercentualInfrutiferas"><partial name="_Loading" /></h4>
                        <small>
                            Percentual de prospecções infrutíferas
                        </small>
                    </div>
                </div>
            </div>

            <div class="app-card app-card-chart w-50 h-100">
                <div class="app-card-header p-3">
                    <h4 class="app-card-title">Status Geral das Prospecções</h4>
                </div>
                <div class="app-card-body text-center p-3 p-lg-4">
                    <figure class="highcharts-figure">
                        <div id="pizza_desistencia"><partial name="_Loading" /></div>
                    </figure>
                </div>
            </div>
        </div>
    </div>
    <div class="d-flex gap-4 justify-content-between align-items-start shadow-sm">
        <div class="app-card app-card-chart w-50 h-100">
            <div class="app-card-header p-3">
                <h4 class="app-card-title">Status de Prospecções com Proposta</h4>
            </div>
            <div class="app-card-body text-center p-3 p-lg-4">
                <figure class="highcharts-figure">
                    <div id="pizza_conversao"><partial name="_Loading" /></div>
                </figure>
            </div>
        </div>

        <div class="app-card app-card-chart w-50 h-100">
            <div class="app-card-header p-3">
                <h4 class="app-card-title">Status de Prospecções com Proposta</h4>
            </div>
            <div class="app-card-body row text-center p-3 p-lg-4">
                <div class="col-12">
                    <h1 class="display-3" id="TaxaConversao"><partial name="_Loading" /></h1>
                    <small>
                        Taxa de conversão de prospecções
                    </small>
                    <hr />
                </div>
                <div class="col-4">
                    <h4 id="TicketMedioProsp"><partial name="_Loading" /></h4>
                    <small id="CheckboxProspAtivas8">
                        Ticket médio das prospecções
                    </small>
                </div>
                <div class="col-4">
                    <h4 id="PropostasEnviadas"><partial name="_Loading" /></h4>
                    <small id="CheckboxProspAtivas9">
                        Propostas comerciais enviadas
                    </small>
                </div>
                <div class="col-4">
                    <h4 id="ProjetosContratados"><partial name="_Loading" /></h4>
                    <small>
                        Projetos contratados
                    </small>
                </div>
            </div>
        </div>


    </div>

}
else
{
    <h3> Ainda não existem dados cadastrados. Esta aba aparecerá quando você tiver mais dados cadastrados.</h3>
}