@page
@model IndexModel

@{
    ViewData["Title"] = "Perfil";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<partial name="_StatusMessage" model="Model.StatusMessage" />

<h4 class="card-title">@ViewData["Title"]</h4>
<div class="row card">
    <div class="card-body">
        <div>
            <h5>Indicadores</h5>
            <hr />
            <dl>
                <dd>
                    Projetos com minha liderança
                </dd>
                <dt>
                    @Model.Bag["n_projs"]
                </dt>
                <dd>
                    Prospecções com minha liderança
                </dd>
                <dt>
                    @Model.Bag["n_prosps"]
                </dt>
                <dd>
                    Propostas enviadas
                </dd>
                <dt>
                    @Model.Bag["n_propostas"]
                </dt>
                <dd>
                    Valores incorporados (este ano)
                </dd>
                <dt>
                    @Model.Bag["valor_projetos"].ToString("C2", new System.Globalization.CultureInfo("pt-BR"));
                </dt>
                <dd>
                    Tíquete médio dos projetos
                </dd>
                <dt>
                    @{
                        decimal valor_medio;
                        try
                        {

                            valor_medio = (Decimal)(Model.Bag["valor_projetos"] / Model.Bag["n_projs"]);
                        }
                        catch (Exception e)
                        {
                            valor_medio = 0M;
                        }
                    }
                    @valor_medio.ToString("C2", new System.Globalization.CultureInfo("pt-BR"));
                </dt>
                <dd>
                    Prospecções convertidas
                </dd>
                <dt>
                    @Model.Bag["n_convertidos"]
                </dt>
                <dd>
                    Taxa de conversão
                </dd>
                <dt>
                    @{
                        decimal taxa_conversao;
                        try
                        {
                            taxa_conversao = (Decimal)(Model.Bag["n_convertidos"] / Model.Bag["n_propostas"]);
                        }
                        catch
                        {
                            taxa_conversao = 0;
                        }
                    }

                    @taxa_conversao.ToString("P2")
                </dt>

            </dl>
            <hr />

        </div>

        <form id="profile-form" method="post">
            <fieldset>
                <legend>Dados de usuário</legend>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Username"></label>
                    <input asp-for="Username" class="form-control" disabled />
                </div>
                <div class="form-group">
                    <label asp-for="Input.PhoneNumber"></label>
                    <input asp-for="Input.PhoneNumber" class="form-control" />
                    <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
                </div>

                <button id="update-profile-button" type="submit" class="btn btn-primary">Save</button>
            </fieldset>
        </form>
        <hr />
    </div>
</div>

<a asp-controller="FunilDeVendas" asp-action="RelatorioProspeccoes">
                <button class="btn btn-primary"> Obter Prospecções da semana</button>
            </a>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}